// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Quilti.DAL;

namespace Quilti.Migrations
{
    [DbContext(typeof(QuiltiContext))]
    [Migration("20210124051851_patch6")]
    partial class patch6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Quilti.Models.Patch", b =>
                {
                    b.Property<int>("PatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatorIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EastPatchId")
                        .HasColumnType("int");

                    b.Property<string>("ImageMini")
                        .HasColumnType("VARCHAR");

                    b.Property<DateTimeOffset?>("LastModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("NorthPatchId")
                        .HasColumnType("int");

                    b.Property<string>("ObjectStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SouthPatchId")
                        .HasColumnType("int");

                    b.Property<int?>("WestPatchId")
                        .HasColumnType("int");

                    b.HasKey("PatchId");

                    b.HasIndex("EastPatchId")
                        .IsUnique()
                        .HasFilter("[EastPatchId] IS NOT NULL");

                    b.HasIndex("NorthPatchId")
                        .IsUnique()
                        .HasFilter("[NorthPatchId] IS NOT NULL");

                    b.HasIndex("SouthPatchId")
                        .IsUnique()
                        .HasFilter("[SouthPatchId] IS NOT NULL");

                    b.HasIndex("WestPatchId")
                        .IsUnique()
                        .HasFilter("[WestPatchId] IS NOT NULL");

                    b.ToTable("Patches");
                });

            modelBuilder.Entity("Quilti.Models.PatchImage", b =>
                {
                    b.Property<int>("PatchImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.Property<DateTimeOffset?>("LastModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ObjectStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PatchId")
                        .HasColumnType("int");

                    b.HasKey("PatchImageId");

                    b.HasIndex("PatchId")
                        .IsUnique()
                        .HasFilter("[PatchId] IS NOT NULL");

                    b.ToTable("PatchImages");
                });

            modelBuilder.Entity("Quilti.Models.Patch", b =>
                {
                    b.HasOne("Quilti.Models.Patch", "EastPatch")
                        .WithOne()
                        .HasForeignKey("Quilti.Models.Patch", "EastPatchId");

                    b.HasOne("Quilti.Models.Patch", "NorthPatch")
                        .WithOne()
                        .HasForeignKey("Quilti.Models.Patch", "NorthPatchId");

                    b.HasOne("Quilti.Models.Patch", "SouthPatch")
                        .WithOne()
                        .HasForeignKey("Quilti.Models.Patch", "SouthPatchId");

                    b.HasOne("Quilti.Models.Patch", "WestPatch")
                        .WithOne()
                        .HasForeignKey("Quilti.Models.Patch", "WestPatchId");

                    b.Navigation("EastPatch");

                    b.Navigation("NorthPatch");

                    b.Navigation("SouthPatch");

                    b.Navigation("WestPatch");
                });

            modelBuilder.Entity("Quilti.Models.PatchImage", b =>
                {
                    b.HasOne("Quilti.Models.Patch", "Patch")
                        .WithOne("PatchImage")
                        .HasForeignKey("Quilti.Models.PatchImage", "PatchId");

                    b.Navigation("Patch");
                });

            modelBuilder.Entity("Quilti.Models.Patch", b =>
                {
                    b.Navigation("PatchImage");
                });
#pragma warning restore 612, 618
        }
    }
}
